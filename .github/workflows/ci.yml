name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan:
    name: scan
    runs-on: ubuntu-latest
    container:
      image: ruby:3.3-slim

    steps:
      - name: Install system dependencies
        run: |
          apt-get update -qq && \
          apt-get install -y \
          git nodejs npm postgresql-client ca-certificates \
          vim chromium chromium-driver

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4

      - name: Run security scans
        run: | 
          bin/brakeman --no-pager
          bin/importmap audit

  lint:
    name: lint
    runs-on: ubuntu-latest
    container:
      image: ruby:3.3-slim

    steps:
      - name: Install system dependencies
        run: |
          apt-get update -qq && \
          apt-get install -y \
          git nodejs npm postgresql-client ca-certificates \
          vim chromium chromium-driver

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4

      - name: Run linters
        run: bin/rubocop -f github

  test:
    name: test
    runs-on: ubuntu-latest
    container:
      image: ruby:3.3-slim
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@postgres:5432

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install system dependencies
        run: |
          apt-get update -qq && \
          apt-get install -y \
          git nodejs npm postgresql-client ca-certificates \
          vim chromium chromium-driver

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4

      - name: Prepare application
        run: |
          bin/rails db:create db:schema:load
          bin/rails assets:precompile
        
      - name: Run tests
        run: bundle exec rspec

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore